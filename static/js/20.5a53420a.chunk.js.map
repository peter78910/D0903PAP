{"version":3,"sources":["../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js","../node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","../node_modules/@mui/material/FormControlLabel/FormControlLabel.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","app/views/sessions/login/JwtLogin.jsx"],"names":["getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchBaseRoot","styled","ButtonBase","skipSx","ownerState","_extends","padding","borderRadius","edge","marginLeft","size","marginRight","SwitchBaseInput","cursor","position","opacity","width","height","top","left","margin","zIndex","SwitchBase","React","props","ref","autoFocus","checkedProp","checked","checkedIcon","className","defaultChecked","disabledProp","disabled","disableFocusRipple","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutPropertiesLoose","useControlled","controlled","default","Boolean","state","setCheckedState","muiFormControl","useFormControl","hasLabelFor","classes","slots","root","capitalize","input","composeClasses","useUtilityClasses","_jsxs","component","clsx","centerRipple","focusRipple","role","undefined","event","children","_jsx","nativeEvent","defaultPrevented","newChecked","target","getFormControlLabelUtilityClasses","formControlLabelClasses","FormControlLabelRoot","overridesResolver","styles","label","labelPlacement","theme","display","alignItems","verticalAlign","WebkitTapHighlightColor","flexDirection","color","palette","text","FormControlLabel","inProps","useThemeProps","componentsProps","control","disableTypography","controlProps","forEach","key","Typography","typography","createSvgIcon","d","getCheckboxUtilityClass","checkboxClasses","CheckboxRoot","shouldForwardProp","prop","rootShouldForwardProp","indeterminate","secondary","disableRipple","backgroundColor","alpha","action","active","main","hoverOpacity","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_icon$props$fontSize","_indeterminateIcon$pr","iconProp","indeterminateIcon","indeterminateIconProp","composedClasses","fontSize","FlexBox","Box","JustifyBox","justifyContent","background","ContentBox","FormBox","AlignItemsCenter","IMG","JWTRoot","minHeight","maxWidth","StyledProgress","CircularProgress","JwtLogin","navigate","useNavigate","useState","loading","setLoading","email","password","userInfo","setUserInfo","message","setMessage","login","useAuth","handleChange","temp","useTheme","textError","error","handleFormSubmit","primary","a","console","log","container","item","lg","md","sm","xs","src","alt","onSubmit","sx","mb","variant","validators","errorMessages","agreement","flexWrap"],"mappings":"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","file":"static/js/20.5a53420a.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nconst SwitchBaseRoot = styled(ButtonBase, {\n  skipSx: true\n})(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input', {\n  skipSx: true\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","import { generateUtilityClasses, generateUtilityClass } from '@mui/base';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label']);\nexport default formControlLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`],\n    label: ['label', disabled && 'disabled']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\n\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: theme.palette.text.disabled\n    }\n  }\n}));\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n\n  const {\n    className,\n    componentsProps = {},\n    control,\n    disabled: disabledProp,\n    disableTypography,\n    label,\n    labelPlacement = 'end'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    label,\n    labelPlacement\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label.type === Typography || disableTypography ? label : /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\",\n      className: classes.label\n    }, componentsProps.typography, {\n      children: label\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.oneOfType([PropTypes.element, PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import {\n    Card,\n    Grid,\n    Button,\n    Checkbox,\n    CircularProgress,\n    FormControlLabel,\n} from '@mui/material'\nimport React, { useState } from 'react'\nimport useAuth from 'app/hooks/useAuth'\nimport { useNavigate } from 'react-router-dom'\nimport { Box, styled, useTheme } from '@mui/system'\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator'\nimport { Paragraph, Span } from 'app/components/Typography'\n\nconst FlexBox = styled(Box)(() => ({\n    display: 'flex',\n    alignItems: 'center',\n}))\n\nconst JustifyBox = styled(FlexBox)(() => ({\n    justifyContent: 'center',\n    background: '#124472'\n}))\n\nconst ContentBox = styled(Box)(() => ({\n    height: '100%',\n    padding: '32px',\n    position: 'relative',\n    background: 'rgba(0, 0, 0, 0.01)',\n}))\n\nconst FormBox = styled(FlexBox)(() => ({\n    height: '100%'\n}))\n\nconst AlignItemsCenter = styled('div')(() => ({\n    alignItems: 'center'\n}))\n\nconst IMG = styled('img')(() => ({\n    width: '100%',\n}))\n\nconst JWTRoot = styled(JustifyBox)(() => ({\n    background: '#1A2038',\n    minHeight: '100% !important',\n    '& .card': {\n        maxWidth: 800,\n        borderRadius: 12,\n        margin: '1rem',\n    },\n}))\n\nconst StyledProgress = styled(CircularProgress)(() => ({\n    position: 'absolute',\n    top: '6px',\n    left: '25px',\n}))\n\nconst JwtLogin = () => {\n    const navigate = useNavigate()\n    const [loading, setLoading] = useState(false)\n    const [userInfo, setUserInfo] = useState({\n        email: 'jason@ui-lib.com',\n        password: 'dummyPass',\n    })\n    const [message, setMessage] = useState('')\n    const { login } = useAuth()\n\n    const handleChange = ({ target: { name, value } }) => {\n        let temp = { ...userInfo }\n        temp[name] = value\n        setUserInfo(temp)\n    }\n\n    const { palette } = useTheme()\n    const textError = palette.error.main\n    const textPrimary = palette.primary.main\n\n    const handleFormSubmit = async (event) => {\n        setLoading(true)\n        try {\n            await login(userInfo.email, userInfo.password)\n            navigate('/')\n        } catch (e) {\n            console.log(e)\n            setMessage(e.message)\n            setLoading(false)\n        }\n    }\n\n    return (\n        <JWTRoot>\n            <Card className=\"card\">\n                <Grid container>\n                    <Grid item lg={5} md={5} sm={5} xs={12}>\n                        <JustifyBox height=\"100%\">\n                            <IMG\n                                src=\"./assets/images/logos/pcap_big.svg\"\n                                alt=\"\"\n                            />\n                        </JustifyBox>\n                    </Grid>\n                    <Grid item lg={7} md={7} sm={7} xs={12}>\n                        <ContentBox>\n                            <FormBox>\n                                <AlignItemsCenter>\n                                    <ValidatorForm onSubmit={handleFormSubmit}>\n                                        <TextValidator\n                                            sx={{ mb: 3, width: '100%' }}\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            label=\"Email\"\n                                            onChange={handleChange}\n                                            type=\"email\"\n                                            name=\"email\"\n                                            value={userInfo.email}\n                                            validators={['required', 'isEmail']}\n                                            errorMessages={[\n                                                'this field is required',\n                                                'email is not valid',\n                                            ]}\n                                        />\n                                        <TextValidator\n                                            sx={{ mb: '12px', width: '100%' }}\n                                            label=\"Password\"\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            onChange={handleChange}\n                                            name=\"password\"\n                                            type=\"password\"\n                                            value={userInfo.password}\n                                            validators={['required']}\n                                            errorMessages={['this field is required']}\n                                        />\n                                        <FormControlLabel\n                                            sx={{ mb: '12px', maxWidth: 288 }}\n                                            name=\"agreement\"\n                                            onChange={handleChange}\n                                            control={\n                                                <Checkbox\n                                                    size=\"small\"\n                                                    onChange={({\n                                                        target: { checked },\n                                                    }) =>\n                                                        handleChange({\n                                                            target: {\n                                                                name: 'agreement',\n                                                                value: checked,\n                                                            },\n                                                        })\n                                                    }\n                                                    checked={userInfo.agreement || true}\n                                                />\n                                            }\n                                            label=\"Remeber me\"\n                                        />\n\n                                        {message && (\n                                            <Paragraph sx={{ color: textError }}>\n                                                {message}\n                                            </Paragraph>\n                                        )}\n\n                                        <FlexBox mb={2} flexWrap=\"wrap\">\n                                            <Box position=\"relative\">\n                                                <Button\n                                                    variant=\"contained\"\n                                                    color=\"primary\"\n                                                    disabled={loading}\n                                                    type=\"submit\"\n                                                >\n                                                    Sign in\n                                                </Button>\n                                                {loading && (\n                                                    <StyledProgress\n                                                        size={24}\n                                                        className=\"buttonProgress\"\n                                                    />\n                                                )}\n                                            </Box>\n                                            {/* <Span sx={{ mr: 1, ml: '20px' }}>or</Span>\n                                            <Button\n                                                sx={{ textTransform: 'capitalize' }}\n                                                onClick={() =>\n                                                    navigate('/session/signup')\n                                                }\n                                            >\n                                                Sign up\n                                            </Button> */}\n                                        </FlexBox>\n                                        {/* <Button\n                                    sx={{ color: textPrimary }}\n                                    onClick={() =>\n                                        navigate('/session/forgot-password')\n                                    }\n                                >\n                                    Forgot password?\n                                </Button> */}\n                                    </ValidatorForm>\n                                </AlignItemsCenter>\n                            </FormBox>\n                        </ContentBox>\n                    </Grid>\n                </Grid>\n            </Card>\n        </JWTRoot>\n    )\n}\n\nexport default JwtLogin\n"],"sourceRoot":""}