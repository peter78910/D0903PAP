{"version":3,"sources":["app/views/material-kit/tables/SimpleTable.jsx","app/views/material-kit/tables/PaginationTable.jsx","app/views/material-kit/tables/AppTable.jsx"],"names":["StyledTable","styled","Table","theme","whiteSpace","paddingLeft","paddingRight","textTransform","SpanCell","Span","color","stableSort","array","comparator","stabilizedThis","map","el","index","sort","a","b","order","descendingComparator","orderBy","getComparator","dataList","SimpleTable","key","React","useState","setOrder","setOrderBy","statusToStr","status","result","statusToColor","Box","width","overflow","TableHead","TableRow","TableCell","sortDirection","TableSortLabel","active","direction","onClick","event","TableBody","subscriber","align","room_name","heart_rate","spo2","last_update","Container","margin","breakpoints","down","marginBottom","AppTable","className","routeSegments","name","path","title","py"],"mappings":"yOAcMA,EAAcC,YAAOC,IAAPD,EAAc,cAAGE,MAAH,MAAgB,CAC9CC,WAAY,MACZ,UAAW,CACP,OAAQ,CACJ,OAAQ,CACJC,YAAa,EACbC,aAAc,KAI1B,UAAW,CACP,OAAQ,CACJ,OAAQ,CACJD,YAAa,EACbE,cAAe,oBAQzBC,EAAWP,YAAOQ,IAAPR,EAAa,kBAAgB,CAC1C,WAAc,MACd,cAAiB,OACjB,WAAc,SACd,MAAS,qBACT,QAAW,UACX,aAAgB,MAChB,WAP0B,EAAGS,UAUjC,SAASC,EAAWC,EAAOC,GACvB,IAAMC,EAAiBF,EAAMG,KAAI,SAACC,EAAIC,GAAL,MAAe,CAACD,EAAIC,MAQrD,OAPAH,EAAeI,MAAK,SAACC,EAAGC,GACpB,IAAMC,EAAQR,EAAWM,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVC,EACOA,EAEJF,EAAE,GAAKC,EAAE,MAEbN,EAAeC,KAAI,SAACC,GAAD,OAAQA,EAAG,MAGzC,SAASM,EAAqBH,EAAGC,EAAGG,GAChC,OAAIH,EAAEG,GAAWJ,EAAEI,IACP,EAERH,EAAEG,GAAWJ,EAAEI,GACR,EAEJ,EAGX,SAASC,EAAcH,EAAOE,GAC1B,MAAiB,SAAVF,EACD,SAACF,EAAGC,GAAJ,OAAUE,EAAqBH,EAAGC,EAAGG,IACrC,SAACJ,EAAGC,GAAJ,OAAWE,EAAqBH,EAAGC,EAAGG,IAGhD,IAyGME,EAAW,CAAC,CACd,UAAa,SACb,KAAQ,GACR,YAAe,cACf,WAAc,IACd,OAAU,GACX,CACC,UAAa,SACb,KAAQ,GACR,YAAe,cACf,WAAc,IACd,OAAU,GACX,CACC,UAAa,SACb,KAAQ,GACR,YAAe,cACf,WAAc,IACd,OAAU,GACX,CACC,UAAa,SACb,KAAQ,GACR,YAAe,cACf,WAAc,IACd,OAAU,GACX,CACC,UAAa,SACb,KAAQ,GACR,YAAe,cACf,WAAc,IACd,OAAU,GACX,CACC,UAAa,SACb,KAAQ,GACR,YAAe,cACf,WAAc,IACd,OAAU,GACX,CACC,UAAa,SACb,KAAQ,GACR,YAAe,cACf,WAAc,IACd,OAAU,GACX,CACC,UAAa,SACb,KAAQ,GACR,YAAe,cACf,WAAc,IACd,OAAU,GACX,CACC,UAAa,SACb,KAAQ,GACR,YAAe,cACf,WAAc,GACd,OAAU,GACX,CACC,UAAa,SACb,KAAQ,GACR,YAAe,cACf,WAAc,IACd,OAAU,GACX,CACC,UAAa,SACb,KAAQ,GACR,YAAe,cACf,WAAc,IACd,OAAU,GACX,CACC,UAAa,SACb,KAAQ,GACR,YAAe,cACf,WAAc,IACd,OAAU,GACX,CACC,UAAa,SACb,KAAQ,GACR,YAAe,cACf,WAAc,IACd,OAAU,GACX,CACC,UAAa,SACb,KAAQ,GACR,YAAe,cACf,WAAc,IACd,OAAU,GACX,CACC,UAAa,SACb,KAAQ,GACR,YAAe,cACf,WAAc,IACd,OAAU,GACX,CACC,UAAa,SACb,KAAQ,GACR,YAAe,cACf,WAAc,IACd,OAAU,GACX,CACC,UAAa,SACb,KAAQ,GACR,YAAe,cACf,WAAc,GACd,OAAU,GACX,CACC,UAAa,SACb,KAAQ,GACR,YAAe,cACf,WAAc,IACd,OAAU,GACX,CACC,UAAa,SACb,KAAQ,GACR,YAAe,cACf,WAAc,IACd,OAAU,GACX,CACC,UAAa,SACb,KAAQ,GACR,YAAe,cACf,WAAc,IACd,OAAU,IAICC,EApOK,WAChB,IAAoBC,EAMpB,EAA0BC,IAAMC,SAAS,OAAzC,mBAAOR,EAAP,KAAcS,EAAd,KACA,EAA8BF,IAAMC,SAAS,UAA7C,mBAAON,EAAP,KAAgBQ,EAAhB,KAEA,SAASC,EAAYC,GACjB,IAAIC,EACJ,OAAQD,GACJ,KAAK,EAYL,QACIC,EAAS,SACT,MAXJ,KAAK,EACDA,EAAS,UACT,MACJ,KAAK,EACDA,EAAS,YACT,MACJ,KAAK,EACDA,EAAS,SAMjB,OAAOA,EAGX,SAASC,EAAcF,GACnB,IAAIC,EACJ,OAAQD,GACJ,KAAK,EAYL,QACIC,EAAS,QACT,MAXJ,KAAK,EACDA,EAAS,SACT,MACJ,KAAK,EACDA,EAAS,MACT,MACJ,KAAK,EACDA,EAAS,OAMjB,OAAOA,EAGX,OACI,cAACE,EAAA,EAAD,CAAKC,MAAM,OAAOC,SAAS,OAA3B,SACI,eAACtC,EAAD,WACI,cAACuC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,uBACA,cAACA,EAAA,EAAD,8BACA,cAACA,EAAA,EAAD,uBACA,eAACA,EAAA,EAAD,CAEIC,cAA2B,WAAZnB,GAAuBF,EAF1C,sBAGI,cAACsB,EAAA,EAAD,CACIC,OAAoB,WAAZrB,EACRsB,UAAuB,WAAZtB,EAAuBF,EAAQ,MAC1CyB,SAnERnB,EAmE4B,SAnEpB,SAACoB,GAEzBjB,EADcP,IAAYI,GAAiB,QAAVN,EAChB,OAAS,OAC1BU,EAAWJ,SA2Dc,UAST,cAACc,EAAA,EAAD,+BAGR,cAACO,EAAA,EAAD,UACKrC,EAAWc,EAAUD,EAAcH,EAAOE,IACtCR,KAAI,SAACkC,EAAYhC,GAAb,OACD,eAACuB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWS,MAAM,OAAjB,SACKD,EAAWE,YAEhB,cAACV,EAAA,EAAD,CAAWS,MAAM,OAAjB,SACKD,EAAWG,aAEhB,cAACX,EAAA,EAAD,CAAWS,MAAM,OAAjB,SACKD,EAAWI,OAEhB,cAACZ,EAAA,EAAD,UACI,cAACjC,EAAD,CAAUE,MAAOyB,EAAcc,EAAWhB,QAA1C,SACMD,EAAYiB,EAAWhB,YAEjC,cAACQ,EAAA,EAAD,CAAWS,MAAM,OAAjB,SACKD,EAAWK,gBAfLrC,c,wBC3IvBhB,YAAOC,IAAPD,EAAc,cAAGE,MAAH,MAAgB,CAC9CC,WAAY,MACZ,UAAW,CACP,OAAQ,CACJ,OAAQ,CACJC,YAAa,EACbC,aAAc,KAI1B,UAAW,CACP,OAAQ,CACJ,OAAQ,CACJD,YAAa,EACbE,cAAe,oB,OCrBzBgD,EAAYtD,YAAO,MAAPA,EAAc,kBAAGE,EAAH,EAAGA,MAAH,UAC5BqD,OAAQ,QADoB,cAE3BrD,EAAMsD,YAAYC,KAAK,MAAQ,CAC5BF,OAAQ,SAHgB,cAK5B,gBAL4B,aAMxBG,aAAc,QACbxD,EAAMsD,YAAYC,KAAK,MAAQ,CAC5BC,aAAc,UARM,KAkCjBC,UArBE,WACb,OACI,eAACL,EAAD,WACI,qBAAKM,UAAU,aAAf,SACI,cAAC,IAAD,CACIC,cAAe,CACX,CAAEC,KAAM,YAAaC,KAAM,kBAIvC,cAAC,IAAD,CAAYC,MAAM,eAAlB,SACI,cAAC,EAAD,MAEJ,cAAC7B,EAAA,EAAD,CAAK8B,GAAG","file":"static/js/37.ccfbff09.chunk.js","sourcesContent":["import React from 'react'\nimport {\n    Table,\n    TableHead,\n    TableCell,\n    TableSortLabel,\n    TableBody,\n    IconButton,\n    Icon,\n    TableRow,\n} from '@mui/material'\nimport { Box, styled } from '@mui/system'\nimport { Span } from 'app/components/Typography'\n\nconst StyledTable = styled(Table)(({ theme }) => ({\n    whiteSpace: 'pre',\n    '& thead': {\n        '& tr': {\n            '& th': {\n                paddingLeft: 0,\n                paddingRight: 0,\n            },\n        },\n    },\n    '& tbody': {\n        '& tr': {\n            '& td': {\n                paddingLeft: 0,\n                textTransform: 'capitalize',\n            },\n        },\n    },\n}))\n\n\n\nconst SpanCell = styled(Span)(({ color }) => ({\n    \"lineHeight\": \"1.5\",\n    \"textTransform\": \"none\",\n    \"whiteSpace\": \"normal\",\n    \"color\": \"rgb(255, 255, 255)\",\n    \"padding\": \"2px 8px\",\n    \"borderRadius\": \"4px\",\n    \"background\": color\n}))\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) {\n            return order;\n        }\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nconst SimpleTable = () => {\n    const sortByHead = (key) => (event) => {\n        const isAsc = orderBy === key && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(key);\n    };\n\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('status');\n\n    function statusToStr(status) {\n        let result;\n        switch (status) {\n            case 1:\n                result = 'Normal';\n                break;\n            case 2:\n                result = 'Monitor';\n                break;\n            case 3:\n                result = 'Attention';\n                break;\n            case 4:\n                result = 'Device';\n                break;\n            default:\n                result = 'Normal';\n                break;    \n        }\n        return result;\n    }\n\n    function statusToColor(status) {\n        let result;\n        switch (status) {\n            case 1:\n                result = 'green';\n                break;\n            case 2:\n                result = 'orange';\n                break;\n            case 3:\n                result = 'red';\n                break;\n            case 4:\n                result = 'blue';\n                break;\n            default:\n                result = 'green';\n                break;    \n        }\n        return result;\n    }\n\n    return (\n        <Box width=\"100%\" overflow=\"auto\">\n            <StyledTable>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Room/Bed</TableCell>\n                        <TableCell>Heart Rate(bpm)</TableCell>\n                        <TableCell>SPo2 (%)</TableCell>\n                        <TableCell\n                            key={'status'}\n                            sortDirection={orderBy === 'status' ? order : false}>Status...\n                            <TableSortLabel\n                                active={orderBy === 'status'}\n                                direction={orderBy === 'status' ? order : 'asc'}\n                                onClick={sortByHead('status')}>\n\n                            </TableSortLabel>\n                        </TableCell>\n                        <TableCell>Last Update</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {stableSort(dataList, getComparator(order, orderBy))\n                        .map((subscriber, index) => (\n                            <TableRow key={index}>\n                                <TableCell align=\"left\">\n                                    {subscriber.room_name}\n                                </TableCell>\n                                <TableCell align=\"left\">\n                                    {subscriber.heart_rate}\n                                </TableCell>\n                                <TableCell align=\"left\">\n                                    {subscriber.spo2}\n                                </TableCell>\n                                <TableCell>\n                                    <SpanCell color={statusToColor(subscriber.status)}\n                                        >{statusToStr(subscriber.status)}</SpanCell>\n                                </TableCell>\n                                <TableCell align=\"left\">\n                                    {subscriber.last_update}\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                </TableBody>\n            </StyledTable>\n        </Box>\n    )\n}\n\n\n\nconst dataList = [{\n    \"room_name\": \"108/01\",\n    \"spo2\": 92,\n    \"last_update\": \"3 Apr 17:14\",\n    \"heart_rate\": 118,\n    \"status\": 1\n}, {\n    \"room_name\": \"108/21\",\n    \"spo2\": 92,\n    \"last_update\": \"3 Apr 17:14\",\n    \"heart_rate\": 112,\n    \"status\": 1\n}, {\n    \"room_name\": \"107/31\",\n    \"spo2\": 98,\n    \"last_update\": \"3 Apr 17:14\",\n    \"heart_rate\": 116,\n    \"status\": 1\n}, {\n    \"room_name\": \"108/41\",\n    \"spo2\": 95,\n    \"last_update\": \"3 Apr 17:14\",\n    \"heart_rate\": 110,\n    \"status\": 2\n}, {\n    \"room_name\": \"107/51\",\n    \"spo2\": 97,\n    \"last_update\": \"3 Apr 17:14\",\n    \"heart_rate\": 108,\n    \"status\": 2\n}, {\n    \"room_name\": \"104/11\",\n    \"spo2\": 92,\n    \"last_update\": \"3 Apr 17:14\",\n    \"heart_rate\": 100,\n    \"status\": 4\n}, {\n    \"room_name\": \"109/41\",\n    \"spo2\": 94,\n    \"last_update\": \"3 Apr 17:14\",\n    \"heart_rate\": 104,\n    \"status\": 4\n}, {\n    \"room_name\": \"108/11\",\n    \"spo2\": 92,\n    \"last_update\": \"3 Apr 17:14\",\n    \"heart_rate\": 138,\n    \"status\": 3\n}, {\n    \"room_name\": \"105/41\",\n    \"spo2\": 95,\n    \"last_update\": \"3 Apr 17:14\",\n    \"heart_rate\": 99,\n    \"status\": 1\n}, {\n    \"room_name\": \"106/01\",\n    \"spo2\": 95,\n    \"last_update\": \"3 Apr 17:14\",\n    \"heart_rate\": 134,\n    \"status\": 3\n}, {\n    \"room_name\": \"107/21\",\n    \"spo2\": 92,\n    \"last_update\": \"3 Apr 17:14\",\n    \"heart_rate\": 103,\n    \"status\": 1\n}, {\n    \"room_name\": \"106/31\",\n    \"spo2\": 91,\n    \"last_update\": \"3 Apr 17:14\",\n    \"heart_rate\": 114,\n    \"status\": 3\n}, {\n    \"room_name\": \"106/01\",\n    \"spo2\": 98,\n    \"last_update\": \"3 Apr 17:14\",\n    \"heart_rate\": 122,\n    \"status\": 1\n}, {\n    \"room_name\": \"100/11\",\n    \"spo2\": 99,\n    \"last_update\": \"3 Apr 17:14\",\n    \"heart_rate\": 117,\n    \"status\": 4\n}, {\n    \"room_name\": \"105/31\",\n    \"spo2\": 96,\n    \"last_update\": \"3 Apr 17:14\",\n    \"heart_rate\": 133,\n    \"status\": 1\n}, {\n    \"room_name\": \"101/21\",\n    \"spo2\": 96,\n    \"last_update\": \"3 Apr 17:14\",\n    \"heart_rate\": 117,\n    \"status\": 1\n}, {\n    \"room_name\": \"102/01\",\n    \"spo2\": 94,\n    \"last_update\": \"3 Apr 17:14\",\n    \"heart_rate\": 96,\n    \"status\": 1\n}, {\n    \"room_name\": \"109/01\",\n    \"spo2\": 92,\n    \"last_update\": \"3 Apr 17:14\",\n    \"heart_rate\": 135,\n    \"status\": 4\n}, {\n    \"room_name\": \"109/01\",\n    \"spo2\": 99,\n    \"last_update\": \"3 Apr 17:14\",\n    \"heart_rate\": 102,\n    \"status\": 1\n}, {\n    \"room_name\": \"107/31\",\n    \"spo2\": 99,\n    \"last_update\": \"3 Apr 17:14\",\n    \"heart_rate\": 132,\n    \"status\": 3\n}\n]\n\nexport default SimpleTable\n","import {\n    IconButton,\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell,\n    Icon,\n    TablePagination,\n} from '@mui/material'\nimport React from 'react'\nimport { Box, styled } from '@mui/system'\n\nconst StyledTable = styled(Table)(({ theme }) => ({\n    whiteSpace: 'pre',\n    '& thead': {\n        '& tr': {\n            '& th': {\n                paddingLeft: 0,\n                paddingRight: 0,\n            },\n        },\n    },\n    '& tbody': {\n        '& tr': {\n            '& td': {\n                paddingLeft: 0,\n                textTransform: 'capitalize',\n            },\n        },\n    },\n}))\n\nconst subscribarList = [\n    {\n        name: 'john doe',\n        date: '18 january, 2019',\n        amount: 1000,\n        status: 'close',\n        company: 'ABC Fintech LTD.',\n    },\n    {\n        name: 'kessy bryan',\n        date: '10 january, 2019',\n        amount: 9000,\n        status: 'open',\n        company: 'My Fintech LTD.',\n    },\n    {\n        name: 'kessy bryan',\n        date: '10 january, 2019',\n        amount: 9000,\n        status: 'open',\n        company: 'My Fintech LTD.',\n    },\n    {\n        name: 'james cassegne',\n        date: '8 january, 2019',\n        amount: 5000,\n        status: 'close',\n        company: 'Collboy Tech LTD.',\n    },\n    {\n        name: 'lucy brown',\n        date: '1 january, 2019',\n        amount: 89000,\n        status: 'open',\n        company: 'ABC Fintech LTD.',\n    },\n    {\n        name: 'lucy brown',\n        date: '1 january, 2019',\n        amount: 89000,\n        status: 'open',\n        company: 'ABC Fintech LTD.',\n    },\n    {\n        name: 'lucy brown',\n        date: '1 january, 2019',\n        amount: 89000,\n        status: 'open',\n        company: 'ABC Fintech LTD.',\n    },\n    {\n        name: 'lucy brown',\n        date: '1 january, 2019',\n        amount: 89000,\n        status: 'open',\n        company: 'ABC Fintech LTD.',\n    },\n    {\n        name: 'lucy brown',\n        date: '1 january, 2019',\n        amount: 89000,\n        status: 'open',\n        company: 'ABC Fintech LTD.',\n    },\n]\n\nconst PaginationTable = () => {\n    const [rowsPerPage, setRowsPerPage] = React.useState(5)\n    const [page, setPage] = React.useState(0)\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage)\n    }\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value)\n        setPage(0)\n    }\n\n    return (\n        <Box width=\"100%\" overflow=\"auto\">\n            <StyledTable>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Name</TableCell>\n                        <TableCell>Company</TableCell>\n                        <TableCell>Start Date</TableCell>\n                        <TableCell>Status</TableCell>\n                        <TableCell>Amount</TableCell>\n                        <TableCell>Action</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {subscribarList\n                        .slice(\n                            page * rowsPerPage,\n                            page * rowsPerPage + rowsPerPage\n                        )\n                        .map((subscriber, index) => (\n                            <TableRow key={index}>\n                                <TableCell align=\"left\">\n                                    {subscriber.name}\n                                </TableCell>\n                                <TableCell align=\"left\">\n                                    {subscriber.company}\n                                </TableCell>\n                                <TableCell align=\"left\">\n                                    {subscriber.date}\n                                </TableCell>\n                                <TableCell>{subscriber.status}</TableCell>\n                                <TableCell>${subscriber.amount}</TableCell>\n                                <TableCell>\n                                    <IconButton>\n                                        <Icon color=\"error\">close</Icon>\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                </TableBody>\n            </StyledTable>\n\n            <TablePagination\n                sx={{ px: 2 }}\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={subscribarList.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                backIconButtonProps={{\n                    'aria-label': 'Previous Page',\n                }}\n                nextIconButtonProps={{\n                    'aria-label': 'Next Page',\n                }}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </Box>\n    )\n}\n\nexport default PaginationTable\n","import React from 'react'\nimport SimpleTable from './SimpleTable'\nimport PaginationTable from './PaginationTable'\nimport { Breadcrumb, SimpleCard } from 'app/components'\nimport { Box, styled } from '@mui/system'\n\nconst Container = styled('div')(({ theme }) => ({\n    margin: '30px',\n    [theme.breakpoints.down('sm')]: {\n        margin: '16px',\n    },\n    '& .breadcrumb': {\n        marginBottom: '30px',\n        [theme.breakpoints.down('sm')]: {\n            marginBottom: '16px',\n        },\n    },\n}))\n\nconst AppTable = () => {\n    return (\n        <Container>\n            <div className=\"breadcrumb\">\n                <Breadcrumb\n                    routeSegments={[\n                        { name: 'Dashboard', path: '/material' }\n                    ]}\n                />\n            </div>\n            <SimpleCard title=\"All Patients\">\n                <SimpleTable />\n            </SimpleCard>\n            <Box py=\"12px\" />\n            {/* <SimpleCard title=\"Pagination Table\">\n                <PaginationTable />\n            </SimpleCard> */}\n        </Container>\n    )\n}\n\nexport default AppTable\n"],"sourceRoot":""}