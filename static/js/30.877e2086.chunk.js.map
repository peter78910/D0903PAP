{"version":3,"sources":["app/views/material-kit/checkbox/SimpleCheckbox.jsx","app/views/material-kit/checkbox/LabelledCheckbox.jsx","app/views/material-kit/checkbox/PlacingCheckboxLabel.jsx","app/views/material-kit/checkbox/FormGroupCheckbox.jsx","app/views/material-kit/checkbox/AppCheckbox.jsx"],"names":["SimpleCheckbox","React","useState","checkedA","checkedB","checkedF","state","setState","handleChange","name","event","target","checked","Checkbox","onChange","value","inputProps","color","disabled","indeterminate","defaultChecked","GreenCheckbox","styled","green","LabelledCheckbox","checkedG","FormGroup","row","FormControlLabel","control","label","icon","checkedIcon","fontSize","PlacingCheckboxLabel","setValue","FormControl","component","FormLabel","labelPlacement","AppButtonRoot","display","margin","theme","spacing","FormGroupCheckbox","gilad","jason","antoine","error","filter","v","length","className","FormHelperText","required","Container","breakpoints","down","marginBottom","AppCheckbox","routeSegments","path","title","Box","py"],"mappings":"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","file":"static/js/30.877e2086.chunk.js","sourcesContent":["import React from 'react'\nimport { Checkbox } from '@mui/material'\n\nexport default function SimpleCheckbox() {\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedF: true,\n    })\n\n    const handleChange = (name) => (event) => {\n        setState({ ...state, [name]: event.target.checked })\n    }\n\n    return (\n        <div>\n            <Checkbox\n                checked={state.checkedA}\n                onChange={handleChange('checkedA')}\n                value=\"checkedA\"\n                inputProps={{\n                    'aria-label': 'primary checkbox',\n                }}\n            />\n            <Checkbox\n                checked={state.checkedB}\n                onChange={handleChange('checkedB')}\n                value=\"checkedB\"\n                color=\"primary\"\n                inputProps={{\n                    'aria-label': 'secondary checkbox',\n                }}\n            />\n            <Checkbox\n                value=\"checkedC\"\n                inputProps={{\n                    'aria-label': 'uncontrolled-checkbox',\n                }}\n            />\n            <Checkbox\n                disabled\n                value=\"checkedD\"\n                inputProps={{\n                    'aria-label': 'disabled checkbox',\n                }}\n            />\n            <Checkbox\n                disabled\n                checked\n                value=\"checkedE\"\n                inputProps={{\n                    'aria-label': 'disabled checked checkbox',\n                }}\n            />\n            <Checkbox\n                checked={state.checkedF}\n                onChange={handleChange('checkedF')}\n                value=\"checkedF\"\n                indeterminate\n                inputProps={{\n                    'aria-label': 'indeterminate checkbox',\n                }}\n            />\n            <Checkbox\n                defaultChecked\n                color=\"default\"\n                value=\"checkedG\"\n                inputProps={{\n                    'aria-label': 'checkbox with default color',\n                }}\n            />\n        </div>\n    )\n}\n","import React from 'react'\nimport { styled } from '@mui/material'\nimport { green } from '@mui/material/colors'\nimport Checkbox from '@mui/material/Checkbox'\nimport FormGroup from '@mui/material/FormGroup'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Favorite from '@mui/icons-material/Favorite'\nimport CheckBoxIcon from '@mui/icons-material/CheckBox'\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder'\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank'\n\nconst GreenCheckbox = styled(Checkbox)(() => ({\n    color: green[400],\n    '&$checked': {\n        color: green[600],\n    },\n}))\n\nexport default function LabelledCheckbox() {\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedF: true,\n        checkedG: true,\n    })\n\n    const handleChange = (name) => (event) => {\n        setState({ ...state, [name]: event.target.checked })\n    }\n\n    return (\n        <FormGroup row>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        checked={state.checkedA}\n                        onChange={handleChange('checkedA')}\n                        value=\"checkedA\"\n                    />\n                }\n                label=\"Secondary\"\n            />\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        checked={state.checkedB}\n                        onChange={handleChange('checkedB')}\n                        value=\"checkedB\"\n                        color=\"primary\"\n                    />\n                }\n                label=\"Primary\"\n            />\n            <FormControlLabel\n                control={<Checkbox value=\"checkedC\" />}\n                label=\"Uncontrolled\"\n            />\n            <FormControlLabel\n                disabled\n                control={<Checkbox value=\"checkedD\" />}\n                label=\"Disabled\"\n            />\n            <FormControlLabel\n                disabled\n                control={<Checkbox checked value=\"checkedE\" />}\n                label=\"Disabled\"\n            />\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        checked={state.checkedF}\n                        onChange={handleChange('checkedF')}\n                        value=\"checkedF\"\n                        indeterminate\n                    />\n                }\n                label=\"Indeterminate\"\n            />\n            <FormControlLabel\n                control={\n                    <GreenCheckbox\n                        color=\"default\"\n                        checked={state.checkedG}\n                        onChange={handleChange('checkedG')}\n                        value=\"checkedG\"\n                    />\n                }\n                label=\"Custom color\"\n            />\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        icon={<FavoriteBorder />}\n                        checkedIcon={<Favorite />}\n                        value=\"checkedH\"\n                    />\n                }\n                label=\"Custom icon\"\n            />\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n                        checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n                        value=\"checkedI\"\n                    />\n                }\n                label=\"Custom size\"\n            />\n        </FormGroup>\n    )\n}\n","import React from 'react'\nimport Checkbox from '@mui/material/Checkbox'\nimport FormGroup from '@mui/material/FormGroup'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport FormControl from '@mui/material/FormControl'\nimport FormLabel from '@mui/material/FormLabel'\n\nfunction PlacingCheckboxLabel() {\n    const [value, setValue] = React.useState('female')\n\n    function handleChange(event) {\n        setValue(event.target.value)\n    }\n\n    return (\n        <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">labelPlacement</FormLabel>\n            <FormGroup\n                aria-label=\"position\"\n                name=\"position\"\n                value={value}\n                onChange={handleChange}\n                row\n            >\n                <FormControlLabel\n                    value=\"top\"\n                    control={<Checkbox color=\"primary\" />}\n                    label=\"Top\"\n                    labelPlacement=\"top\"\n                />\n                <FormControlLabel\n                    value=\"start\"\n                    control={<Checkbox color=\"primary\" />}\n                    label=\"Start\"\n                    labelPlacement=\"start\"\n                />\n                <FormControlLabel\n                    value=\"bottom\"\n                    control={<Checkbox color=\"primary\" />}\n                    label=\"Bottom\"\n                    labelPlacement=\"bottom\"\n                />\n                <FormControlLabel\n                    value=\"end\"\n                    control={<Checkbox color=\"primary\" />}\n                    label=\"End\"\n                    labelPlacement=\"end\"\n                />\n            </FormGroup>\n        </FormControl>\n    )\n}\n\nexport default PlacingCheckboxLabel\n","import React from 'react'\nimport { styled } from '@mui/system'\nimport {\n    Checkbox,\n    FormLabel,\n    FormControl,\n    FormGroup,\n    FormHelperText,\n    FormControlLabel\n} from '@mui/material'\n\nconst AppButtonRoot = styled('div')(({ theme }) => ({\n    display: 'flex',\n    '& .formControl': {\n        margin: theme.spacing(2),\n    },\n}))\n\nexport default function FormGroupCheckbox() {\n    const [state, setState] = React.useState({\n        gilad: true,\n        jason: false,\n        antoine: false,\n    })\n\n    const handleChange = (name) => (event) => {\n        setState({ ...state, [name]: event.target.checked })\n    }\n\n    const { gilad, jason, antoine } = state\n    const error = [gilad, jason, antoine].filter((v) => v).length !== 2\n\n    return (\n        <AppButtonRoot>\n            <FormControl component=\"fieldset\" className='formControl'>\n                <FormLabel component=\"legend\">Assign responsibility</FormLabel>\n                <FormGroup>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={gilad}\n                                onChange={handleChange('gilad')}\n                                value=\"gilad\"\n                            />\n                        }\n                        label=\"Gilad Gray\"\n                    />\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={jason}\n                                onChange={handleChange('jason')}\n                                value=\"jason\"\n                            />\n                        }\n                        label=\"Jason Killian\"\n                    />\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={antoine}\n                                onChange={handleChange('antoine')}\n                                value=\"antoine\"\n                            />\n                        }\n                        label=\"Antoine Llorca\"\n                    />\n                </FormGroup>\n                <FormHelperText>Be careful</FormHelperText>\n            </FormControl>\n            <FormControl\n                required\n                error={error}\n                component=\"fieldset\"\n                className='formControl'\n            >\n                <FormLabel component=\"legend\">Pick two</FormLabel>\n                <FormGroup>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={gilad}\n                                onChange={handleChange('gilad')}\n                                value=\"gilad\"\n                            />\n                        }\n                        label=\"Gilad Gray\"\n                    />\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={jason}\n                                onChange={handleChange('jason')}\n                                value=\"jason\"\n                            />\n                        }\n                        label=\"Jason Killian\"\n                    />\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={antoine}\n                                onChange={handleChange('antoine')}\n                                value=\"antoine\"\n                            />\n                        }\n                        label=\"Antoine Llorca\"\n                    />\n                </FormGroup>\n                <FormHelperText>You can display an error</FormHelperText>\n            </FormControl>\n        </AppButtonRoot>\n    )\n}\n","import React from 'react'\nimport SimpleCheckbox from './SimpleCheckbox'\nimport LabelledCheckbox from './LabelledCheckbox'\nimport PlacingCheckboxLabel from './PlacingCheckboxLabel'\nimport FormGroupCheckbox from './FormGroupCheckbox'\nimport { Breadcrumb, SimpleCard } from 'app/components'\nimport { Box, styled } from '@mui/system'\n\nconst Container = styled('div')(({ theme }) => ({\n    margin: '30px',\n    [theme.breakpoints.down('sm')]: {\n        margin: '16px',\n    },\n    '& .breadcrumb': {\n        marginBottom: '30px',\n        [theme.breakpoints.down('sm')]: {\n            marginBottom: '16px',\n        },\n    },\n}))\n\nconst AppCheckbox = () => {\n    return (\n        <Container>\n            <div className=\"breadcrumb\">\n                <Breadcrumb\n                    routeSegments={[\n                        { name: 'Material', path: '/material' },\n                        { name: 'Chckbox' },\n                    ]}\n                />\n            </div>\n            <SimpleCard title=\"simple checkbox\">\n                <SimpleCheckbox />\n            </SimpleCard>\n            <Box py=\"12px\" />\n            <SimpleCard title=\"Checkbox with Label\">\n                <LabelledCheckbox />\n            </SimpleCard>\n            <Box py=\"12px\" />\n            <SimpleCard title=\"Checkbox with Form Group\">\n                <FormGroupCheckbox />\n            </SimpleCard>\n            <Box py=\"12px\" />\n            <SimpleCard title=\"Checkbox with Different Label Placement\">\n                <PlacingCheckboxLabel />\n            </SimpleCard>\n        </Container>\n    )\n}\n\nexport default AppCheckbox\n"],"sourceRoot":""}